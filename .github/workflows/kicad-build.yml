name: kicad pcb ops CI

on:
  push:
    paths:
    - 'hardware/**.kicad_pcb'
    - '*hardware/**.sch'
    - 'hardware/**.pro'
    - '.github/workflows/**'

jobs:
  
  mainboard:
    runs-on: ubuntu-latest
    name: build-mainboard-artifact
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: package schematic and pcbs
      id: hello
      uses: newdigate/kicad-github-action@v1.0.9
      with:
        kicad-project-path: "hardware"
        kicad-schematic-filename: "Power Management.kicad_sch"
        kicad-board-filename: "kt_sysadminBadge.kicad_pcb"
    # Use the output from the `hello` step
    - name: Get the output time
      run: echo "The time was ${{ steps.hello.outputs.time }}"
    - name: upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: mainboard-artifact
        path: |
          path/output/bin/
          path/output/test-results
          !path/**/*.tmp 

    - name: Check the output for success or error
      run: |
        echo "Build result: ${{ steps.hello.outputs.message }}"
        if [[ ${{ steps.hello.outputs.success }} != 1 ]]; then
          echo "Build failed: ERC or DRC had errors"
          exit 1
        fi

  breakout:
    runs-on: ubuntu-latest
    name: build-breakout-artifact
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: package schematic and pcbs
      id: hello
      uses: newdigate/kicad-github-action@v1.0.9
      with:
        kicad-project-path: "hardware"
        kicad-schematic-filename: "Power Management.kicad_sch"
        kicad-board-filename: "kt_sysadminBadge.kicad_pcb"
    # Use the output from the `hello` step
    - name: Get the output time
      run: echo "The time was ${{ steps.hello.outputs.time }}"
    - name: upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: breakout-artifact
        path: output
    - name: Check the output for success or error
      run: |
        echo "Build result: ${{ steps.hello.outputs.message }}"
        if [[ ${{ steps.hello.outputs.success }} != 1 ]]; then
          echo "Build failed: ERC or DRC had errors"
          exit 1
        fi


  uSD_extender_male:
    runs-on: ubuntu-latest
    name: build-uSDAdapter-artifact
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: package schematic and pcbs
      id: hello
      uses: newdigate/kicad-github-action@v1.0.9
      with:
        kicad-project-path: "hardware"
        kicad-schematic-filename: "MCU_sch.kicad_sch"
        kicad-board-filename: "kt_sysadminBadge.kicad_pcb"
    # Use the output from the `hello` step
    - name: Get the output time
      run: echo "The time was ${{ steps.hello.outputs.time }}"
    - name: upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: uSD_extender_male-artifact
        path: output
    - name: Check the output for success or error
      run: |
        echo "Build result: ${{ steps.hello.outputs.message }}"
        if [[ ${{ steps.hello.outputs.success }} != 1 ]]; then
          echo "Build failed: ERC or DRC had errors"
          exit 1
        fi

  front-panel:
    runs-on: ubuntu-latest
    name: build-front-panel-artifact
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: package schematic and pcbs
      id: hello
      uses: newdigate/kicad-github-action@v1.0.9
      with:
        kicad-project-path: "hardware"
        kicad-schematic-filename: "kt_sysadminBadge.kicad_sch"
        kicad-board-filename: "kt_sysadminBadge.kicad_pcb"
    # Use the output from the `hello` step
    - name: Get the output time
      run: echo "The time was ${{ steps.hello.outputs.time }}"
    - name: upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: front-panel-artifact
        path: output
    - name: Check the output for success or error
      run: |
        echo "Build result: ${{ steps.hello.outputs.message }}"
        if [[ ${{ steps.hello.outputs.success }} != 1 ]]; then
          echo "Build failed: ERC or DRC had errors"
          exit 1
        fi
